
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String @id @default(cuid())
  username    String @unique
  password    String
  name        String? 
  lastName    String? @map("last_name")
  avatarUrl      String?  @map("avatar_url")
  

  email       String?  
  identification Boolean @default(false)
  comments Comments[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt      @map("updated_at")

  likes         Like[]  
  saves         Saved[]  
  publication  Publication[] 
  mentions Mention[]
  @@map("user")
}  


model Publication {
  id          String @id @default(cuid())
  title       String? 
  description String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt      @map("updated_at")
  
  countLike Int @default(0) @map("count_like")
  savedCount Int @default(0) @map("saved_count")


  likes       Like[]
  saves       Saved[]
  comments Comments[]
  views       Int @default(0)
  imageUrl      String   @default("")
  commentsCount Int @default(0) @map("comments_count")
  visibility  Visibility @default(PUBLIC)

  user        User @relation(fields: [userId],references: [id])
  userId      String @map("user_id")

  mentions Mention[]
  @@map("publication")
}

model Mention {
  id       String @id  @default(cuid())
  user  User @relation(fields: [userId],references: [id]) 
  userId String
  publication Publication @relation(fields: [publicationId],references: [id])
  publicationId String @map("publication_id")
}


model Like {
  id    String @id @default(cuid())

  publication  Publication @relation(fields: [publicationId],references: [id])
  publicationId String @map("publication_id")

  user User @relation(fields: [userId],references: [id])
  userId String @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  @@unique([publicationId, userId]) 
  @@map("likes")
}

model Saved {
  id    String @id @default(cuid())

  publication  Publication @relation(fields: [publicationId],references: [id])
  publicationId String @map("publication_id")

  user User @relation(fields: [userId],references: [id])
  userId String @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  @@unique([publicationId, userId]) 
  @@map("saved")
}

model Comments {
  id String @id @default(cuid())
  user User @relation(fields: [userId],references: [id])
  userId String @map("user_id")
  text String 
  publication Publication @relation(fields: [publicationId],references: [id])
  publicationId String @map("publication_id")

  createdAt DateTime @default(now()) @map("created_at")
  @@map("comments")
}
enum Visibility {
  PUBLIC     
  FRIENDS     
  PRIVATE   
}